#!/usr/bin/env python3
"""
–û–∫–Ω–æ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
"""

import customtkinter as ctk
from auth_system import AuthSystem

class LoginWindow:
    def __init__(self):
        self.auth_system = AuthSystem()
        self.login_successful = False
        self.user_data = None
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞
        self.window = ctk.CTk()
        self.window.title("–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        self.window.geometry("400x300")
        self.window.resizable(False, False)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        self.center_window()
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.create_widgets()
        
    def center_window(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç –æ–∫–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ"""
        self.window.update_idletasks()
        width = self.window.winfo_width()
        height = self.window.winfo_height()
        x = (self.window.winfo_screenwidth() // 2) - (width // 2)
        y = (self.window.winfo_screenheight() // 2) - (height // 2)
        self.window.geometry(f"{width}x{height}+{x}+{y}")
    
    def create_widgets(self):
        """–°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_frame = ctk.CTkFrame(self.window)
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ctk.CTkLabel(
            main_frame, 
            text="–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É", 
            font=ctk.CTkFont(size=24, weight="bold")
        )
        title_label.pack(pady=(20, 30))
        
        # –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
        form_frame = ctk.CTkFrame(main_frame)
        form_frame.pack(fill="x", padx=20, pady=10)
        
        # –ü–æ–ª–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username_label = ctk.CTkLabel(form_frame, text="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        username_label.pack(anchor="w", padx=10, pady=(10, 5))
        
        self.username_entry = ctk.CTkEntry(
            form_frame, 
            placeholder_text="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            width=300
        )
        self.username_entry.pack(padx=10, pady=(0, 15))
        
        # –ü–æ–ª–µ –ø–∞—Ä–æ–ª—è
        password_label = ctk.CTkLabel(form_frame, text="–ü–∞—Ä–æ–ª—å:")
        password_label.pack(anchor="w", padx=10, pady=(0, 5))
        
        self.password_entry = ctk.CTkEntry(
            form_frame, 
            placeholder_text="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
            show="*",
            width=300
        )
        self.password_entry.pack(padx=10, pady=(0, 20))
        
        # –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞
        self.login_button = ctk.CTkButton(
            form_frame,
            text="–í–æ–π—Ç–∏",
            command=self.login,
            width=200,
            height=40
        )
        self.login_button.pack(pady=(0, 20))
        
        # –ö–Ω–æ–ø–∫–∞ Enter –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞
        self.window.bind('<Return>', lambda event: self.login())
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        info_frame = ctk.CTkFrame(main_frame)
        info_frame.pack(fill="x", padx=20, pady=10)
        
        info_label = ctk.CTkLabel(
            info_frame, 
            text="–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\nüë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admn\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user / user",
            font=ctk.CTkFont(size=12)
        )
        info_label.pack(pady=10)
        
        # –°—Ç–∞—Ç—É—Å
        self.status_label = ctk.CTkLabel(
            main_frame, 
            text="",
            font=ctk.CTkFont(size=12)
        )
        self.status_label.pack(pady=10)
    
    def login(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        username = self.username_entry.get().strip()
        password = self.password_entry.get().strip()
        
        if not username or not password:
            self.show_status("‚ùå –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å", "error")
            return
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥
        if self.auth_system.login(username, password):
            self.user_data = self.auth_system.get_current_user()
            self.login_successful = True
            self.show_status("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!", "success")
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
            self.window.after(1000, self.window.destroy)
        else:
            self.show_status("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å", "error")
    
    def show_status(self, message, status_type="info"):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        if status_type == "error":
            self.status_label.configure(text=message, text_color="red")
        elif status_type == "success":
            self.status_label.configure(text=message, text_color="green")
        else:
            self.status_label.configure(text=message, text_color="white")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–∫–Ω–æ –≤—Ö–æ–¥–∞"""
        self.window.mainloop()
        return self.login_successful, self.user_data

def main():
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    login_window = LoginWindow()
    success, user_data = login_window.run()
    
    if success:
        print(f"‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω: {user_data}")
    else:
        print("‚ùå –í—Ö–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω")

if __name__ == "__main__":
    main() 