import customtkinter
from knowledge_editor import KnowledgeEditor
from data_editor import DataEditor
from solver import Solver
from database import init_db, init_db_data_editor


init_db()

class App(customtkinter.CTk):
    def __init__(self, role="user", username="user"):
        super().__init__()
        self.role = role
        self.username = username
        self.title(f"–†–µ–¥–∞–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–π - {username} ({role})")
        self.geometry("1200x800")
        customtkinter.set_appearance_mode("light")
        customtkinter.set_default_color_theme("blue")
        self.configure(fg_color="#ffffff")

        self.create_left_frame()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ (—Å–æ–∑–¥–∞–µ–º –∏—Ö —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        self.knowledge_editor = None
        self.data_editor = None
        self.solver = None

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.show_knowledge_editor()

    def create_left_frame(self):
        
        self.frame_left = customtkinter.CTkFrame(self, fg_color="#fbf2fb", width=220)
        self.frame_left.grid(row=0, column=0, rowspan=2, sticky="nsw", padx=10, pady=10)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        self.user_info = customtkinter.CTkLabel(
            self.frame_left,
            text=f"üë§ {self.username}\nüîë {self.role}",
            font=("Arial", 12, "bold"),
            text_color="#FF007F"
        )
        self.user_info.pack(padx=20, pady=(20, 10))

        self.btn_knowledge = customtkinter.CTkButton(
            self.frame_left,
            text="–†–µ–¥–∞–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–π",
            command=self.show_knowledge_editor,
            fg_color="#FFD1DC",
            text_color="#FF007F",
        )
        self.btn_knowledge.pack(padx=20, pady=10)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∑–Ω–∞–Ω–∏–π
        if self.role != "admin":
            self.knowledge_warning = customtkinter.CTkLabel(
                self.frame_left,
                text="‚ö†Ô∏è –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä",
                font=("Arial", 10),
                text_color="orange"
            )
            self.knowledge_warning.pack(padx=20, pady=(0, 10))

        self.btn_data = customtkinter.CTkButton(
            self.frame_left,
            text="–†–µ–¥–∞–∫—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö",
            command=self.show_data_editor,
            fg_color="#FFD1DC",
            text_color="#FF007F",
        )
        self.btn_data.pack(padx=20, pady=10)

        self.btn_solver = customtkinter.CTkButton(
            self.frame_left,
            text="–†–µ—à–∞—Ç–µ–ª—å –∑–∞–¥–∞—á",
            command=self.show_solver,
            fg_color="#FFD1DC",
            text_color="#FF007F",
        )
        self.btn_solver.pack(padx=20, pady=10)

        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        self.btn_logout = customtkinter.CTkButton(
            self.frame_left,
            text="–í—ã–π—Ç–∏",
            command=self.logout,
            fg_color="#FF6B6B",
            text_color="white"
        )
        self.btn_logout.pack(padx=20, pady=(40, 10))

    def logout(self):
        self.destroy()
        from auth import AuthScreen
        auth = AuthScreen()
        auth.mainloop()

    def show_knowledge_editor(self):
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏
        if self.knowledge_editor is None:
            if self.role == "admin":
                self.knowledge_editor = KnowledgeEditor(self)
            else:
                self.knowledge_editor = KnowledgeEditor(self, readonly=True)
        
        # –°–∫—Ä—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
        if self.data_editor:
            self.data_editor.hide()
        if self.solver:
            self.solver.hide()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –∑–Ω–∞–Ω–∏–π
        self.knowledge_editor.show()

    def show_data_editor(self):
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏
        if self.data_editor is None:
            self.data_editor = DataEditor(self)
        
        # –°–∫—Ä—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
        if self.knowledge_editor:
            self.knowledge_editor.hide()
        if self.solver:
            self.solver.hide()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö
        self.data_editor.show()

    def show_solver(self):
        # –°–æ–∑–¥–∞–µ–º —Ä–µ—à–∞—Ç–µ–ª—å –∑–∞–¥–∞—á —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏
        if self.solver is None:
            self.solver = Solver(self)
        
        # –°–∫—Ä—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
        if self.knowledge_editor:
            self.knowledge_editor.hide()
        if self.data_editor:
            self.data_editor.hide()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ—à–∞—Ç–µ–ª—å –∑–∞–¥–∞—á
        self.solver.show()


if __name__ == "__main__":
    init_db_data_editor()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    from auth import AuthScreen
    auth = AuthScreen()
    auth.mainloop()